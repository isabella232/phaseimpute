Changes in module 'nf-core/bcftools/pluginsplit'
'modules/nf-core/bcftools/pluginsplit/environment.yml' is unchanged
Changes in 'bcftools/pluginsplit/main.nf':
--- modules/nf-core/bcftools/pluginsplit/main.nf
+++ modules/nf-core/bcftools/pluginsplit/main.nf
@@ -15,10 +15,10 @@
     path(targets)
 
     output:
-    tuple val(meta), path("*.{vcf,vcf.gz,bcf,bcf.gz}"), emit: vcf
-    tuple val(meta), path("*.tbi")                    , emit: tbi, optional: true
-    tuple val(meta), path("*.csi")                    , emit: csi, optional: true
-    path "versions.yml"                               , emit: versions
+    tuple val(meta), path("*/*.{vcf,vcf.gz,bcf,bcf.gz}"), emit: vcf
+    tuple val(meta), path("*/*.tbi")                    , emit: tbi, optional: true
+    tuple val(meta), path("*/*.csi")                    , emit: csi, optional: true
+    path "versions.yml"                                 , emit: versions
 
     when:
     task.ext.when == null || task.ext.when
@@ -26,6 +26,7 @@
     script:
     def args = task.ext.args ?: ''
     def prefix = task.ext.prefix ?: "${meta.id}"
+    def suffix = task.ext.suffix ?: ""
 
     def samples_arg = samples ? "--samples-file ${samples}" : ""
     def groups_arg  = groups  ? "--groups-file ${groups}"   : ""
@@ -42,7 +43,22 @@
         ${targets_arg} \\
         --output ${prefix}
 
-    mv ${prefix}/* .
+    if [ -n "${suffix}" ]; then
+        for file in ${prefix}/*; do
+            # Extract the basename
+            base_name=\$(basename "\$file")
+            # Extract the extension
+            extension=""
+            # Remove the extension if it exists
+            if [[ "\$base_name" =~ \\.(vcf|bcf)(\\.gz)?(\\.tbi|\\.csi)?\$ ]]; then
+                extension="\${BASH_REMATCH[0]}"
+                base_name="\${base_name%\$extension}"
+            fi
+            # Construct the new name
+            new_name="\${base_name}${suffix}\${extension}"
+            mv "\$file" "${prefix}/\$new_name"
+        done
+    fi
 
     cat <<-END_VERSIONS > versions.yml
     "${task.process}":
@@ -53,6 +69,7 @@
     stub:
     def args = task.ext.args ?: ''
     def prefix = task.ext.prefix ?: "${meta.id}"
+    def suffix = task.ext.suffix ?: ""
 
     def extension = args.contains("--output-type b") || args.contains("-Ob") ? "bcf.gz" :
                 args.contains("--output-type u") || args.contains("-Ou") ? "bcf" :
@@ -65,15 +82,38 @@
                 ""
     def determination_file = samples ?: targets
     def create_cmd = extension.matches("vcf|bcf") ? "touch " : "echo '' | gzip > "
-    def create_files = "cut -f 3 ${determination_file} | sed -e 's/\$/.${extension}/' > files.txt; while IFS= read -r filename; do ${create_cmd} \"\$filename\"; done < files.txt"
-    def create_index = index.matches("csi|tbi") ? "cut -f 3 ${determination_file} | sed -e 's/\$/.${extension}.${index}/' > indices.txt; touch \$(<indices.txt)" : ""
     """
-    ${create_files}
-    ${create_index}
+    mkdir -p ${prefix}
+
+    cut -f 3 ${determination_file} | sed -e 's/\$/.${extension}/' > files.txt
+    while IFS= read -r filename;
+    do ${create_cmd} "${prefix}/\$filename";
+    if [ -n "${index}" ]; then
+        index_file=\$(sed -e 's/\$/.${index}/' <<< \$filename);
+        touch ${prefix}/\$index_file;
+    fi;
+    done < files.txt
+
+    if [ -n "${suffix}" ]; then
+        for file in ${prefix}/*; do
+            # Extract the basename
+            base_name=\$(basename "\$file")
+            # Extract the extension
+            extension=""
+            # Remove the extension if it exists
+            if [[ "\$base_name" =~ \\.(vcf|bcf)(\\.gz)?(\\.tbi|\\.csi)?\$ ]]; then
+                extension="\${BASH_REMATCH[0]}"
+                base_name="\${base_name%\$extension}"
+            fi
+            # Construct the new name
+            new_name="\${base_name}${suffix}\${extension}"
+            mv "\$file" "${prefix}/\$new_name"
+        done
+    fi
 
     cat <<-END_VERSIONS > versions.yml
     "${task.process}":
         bcftools: \$(bcftools --version 2>&1 | head -n1 | sed 's/^.*bcftools //; s/ .*\$//')
     END_VERSIONS
     """
-}
+}
'modules/nf-core/bcftools/pluginsplit/meta.yml' is unchanged
'modules/nf-core/bcftools/pluginsplit/tests/main.nf.test' is unchanged
'modules/nf-core/bcftools/pluginsplit/tests/main.nf.test.snap' is unchanged
'modules/nf-core/bcftools/pluginsplit/tests/nextflow.config' is unchanged
'modules/nf-core/bcftools/pluginsplit/tests/tags.yml' is unchanged
************************************************************
